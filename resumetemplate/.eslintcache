[{"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\index.js":"1","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\App.js":"2","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\components\\ViewResumeComponent.js":"4","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\components\\DowloadPdf.js":"5","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\components\\CreateExResume.js":"6","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\services\\ExperiencedService.js":"7","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\components\\FPersonalInfo.js":"8","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\components\\EditFresher.js":"9","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\HeaderComponent.js":"10","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\ExperiencedLogin.js":"11","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\HomeComponent.js":"12","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\FresherRegister.js":"13","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\FresherLogin.js":"14","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\AdminLogin.js":"15","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\FreshNavbar.js":"16","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\FPersonalInfo.js":"17","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\ExperiencedRegister.js":"18","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\FormHeader.js":"19","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\ViewForm.js":"20","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\EHeaderComponent.js":"21","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\DownloadExResume.js":"22","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\ExperiencedMain.js":"23","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\CreateExResume.js":"24","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\FreshDownload.js":"25","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\EditFresher.js":"26","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\ForgetPassword.js":"27","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\LoginComponent.js":"28","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\AdminMenu.js":"29","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\ListOfFreshers.js":"30","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\ListOfUsers.js":"31","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\HomeDesign.js":"32","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\AHeaderComponent.js":"33","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\LogoutComponent.js":"34","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\UpdateExResume.js":"35","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\ViewExResume.js":"36","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\services\\AdminService.js":"37","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\services\\FresherService.js":"38","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\Slides.js":"39","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\FreshPassForgot.js":"40","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\ExperiencedForgotPass.js":"41"},{"size":595,"mtime":1610701646872,"results":"42","hashOfConfig":"43"},{"size":3180,"mtime":1610938355871,"results":"44","hashOfConfig":"43"},{"size":362,"mtime":499162500000,"results":"45","hashOfConfig":"43"},{"size":5028,"mtime":1610610938666,"results":"46","hashOfConfig":"43"},{"size":767,"mtime":1610425633379,"results":"47","hashOfConfig":"43"},{"size":25820,"mtime":1610728565185,"results":"48","hashOfConfig":"43"},{"size":1065,"mtime":1610973321895,"results":"49","hashOfConfig":"43"},{"size":18765,"mtime":1610765557731,"results":"50","hashOfConfig":"43"},{"size":21571,"mtime":1610765519287,"results":"51","hashOfConfig":"43"},{"size":1409,"mtime":1610887621928,"results":"52","hashOfConfig":"43"},{"size":3210,"mtime":1610939156003,"results":"53","hashOfConfig":"43"},{"size":1364,"mtime":1610889393871,"results":"54","hashOfConfig":"43"},{"size":3907,"mtime":1610715598000,"results":"55","hashOfConfig":"43"},{"size":2661,"mtime":1610812664000,"results":"56","hashOfConfig":"43"},{"size":2181,"mtime":1610881232954,"results":"57","hashOfConfig":"43"},{"size":869,"mtime":1610883453385,"results":"58","hashOfConfig":"43"},{"size":19423,"mtime":1610821200000,"results":"59","hashOfConfig":"43"},{"size":2951,"mtime":1610600840000,"results":"60","hashOfConfig":"43"},{"size":1391,"mtime":1610750614000,"results":"61","hashOfConfig":"43"},{"size":4285,"mtime":1610973204738,"results":"62","hashOfConfig":"43"},{"size":1950,"mtime":1610938109637,"results":"63","hashOfConfig":"43"},{"size":4154,"mtime":1610984034614,"results":"64","hashOfConfig":"43"},{"size":344,"mtime":1610938374521,"results":"65","hashOfConfig":"43"},{"size":28502,"mtime":1610935533488,"results":"66","hashOfConfig":"43"},{"size":4260,"mtime":1610951419070,"results":"67","hashOfConfig":"43"},{"size":12246,"mtime":1610813364000,"results":"68","hashOfConfig":"43"},{"size":4166,"mtime":1610881353483,"results":"69","hashOfConfig":"43"},{"size":4994,"mtime":1610953807966,"results":"70","hashOfConfig":"43"},{"size":1289,"mtime":1610881283622,"results":"71","hashOfConfig":"43"},{"size":2470,"mtime":1610730142000,"results":"72","hashOfConfig":"43"},{"size":2419,"mtime":1610730116000,"results":"73","hashOfConfig":"43"},{"size":3249,"mtime":1610883902699,"results":"74","hashOfConfig":"43"},{"size":1193,"mtime":1610881315696,"results":"75","hashOfConfig":"43"},{"size":479,"mtime":1610713812000,"results":"76","hashOfConfig":"43"},{"size":25408,"mtime":1610934961176,"results":"77","hashOfConfig":"43"},{"size":5946,"mtime":1610933752035,"results":"78","hashOfConfig":"43"},{"size":849,"mtime":1610729154000,"results":"79","hashOfConfig":"43"},{"size":1112,"mtime":1610739014000,"results":"80","hashOfConfig":"43"},{"size":2518,"mtime":1610892492126,"results":"81","hashOfConfig":"43"},{"size":2246,"mtime":1610766570000,"results":"82","hashOfConfig":"43"},{"size":2310,"mtime":1610818132000,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"bg49mx",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"93"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"119","usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"129","usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"86"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"179","usedDeprecatedRules":"86"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"182","usedDeprecatedRules":"86"},"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\index.js",[],["183","184"],"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\App.js",[],"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\components\\ViewResumeComponent.js",[],["185","186"],"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\components\\DowloadPdf.js",["187","188"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport fileDownload from 'js-file-download';\r\nimport ResumeService from '../services/ResumeService';\r\n\r\nconst URL=\"\"\r\n\r\nclass DowloadPdf extends Component {\r\n\r\n    handleDownload = (filename) => {\r\n        ResumeService.getPdfGeneratedById()\r\n        .then((res) => {\r\n          fileDownload(res.data, filename)\r\n        })\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br/>\r\n                <br/>\r\n                <div className=\"container\">\r\n                <button className=\"btn btn-outline-success\" onClick={() => {this.handleDownload('resume.pdf')}}>Download Pdf</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DowloadPdf;",["189","190"],"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\components\\CreateExResume.js",[],"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\services\\ExperiencedService.js",["191"],"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\components\\FPersonalInfo.js",[],"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\components\\EditFresher.js",["192"],"import React from 'react';\r\n\r\n//import UserService from '../services/UserService';\r\nimport axios from 'axios';\r\n\r\nclass EditForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            users: [],\r\n            answer: \"\",\r\n            fresherId: '',\r\n            fresherIdError: '',\r\n\r\n            fresherName: \"\",\r\n            email: \"\",\r\n            contactNo: \"\",\r\n            age: \"\",\r\n            address: \"\",\r\n            fresherNameError: \"\",\r\n            emailError: \"\",\r\n            contactNoError: \"\",\r\n            ageError: \"\",\r\n            hscPercentError: \"\",\r\n            sscPercentError: \"\",\r\n            degreeError: \"\",\r\n            branchError: \"\",\r\n            degreePercentError: \"\",\r\n            noOfBacklogsError: \"\",\r\n            yeargapError: \"\",\r\n            skills: [\r\n                {\r\n\r\n                    skillName: \"java\"\r\n\r\n                }\r\n            ],\r\n\r\n            hobbies: [\r\n                {\r\n\r\n                    hobbyName: \"\"\r\n\r\n                }\r\n            ],\r\n            projects: [\r\n                {\r\n\r\n                    projectName: \"\",\r\n                    year: \"2018\"\r\n\r\n                }\r\n            ],\r\n            academic: {\r\n                hscPercent: \"\",\r\n                sscPercent: \"\",\r\n                degree: \"\",\r\n                branch: \"\",\r\n                degreePercent: \"\",\r\n                noOfBacklogs: \"\",\r\n                yeargap: \"\"\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    validate = () => {\r\n        let fresherIdError = \"\"\r\n        let fresherNameError = \"\";\r\n        let emailError = \"\";\r\n        let contactNoError = \"\";\r\n        let ageError = \"\";\r\n        let hscPercentError = \"\"\r\n        let sscPercentError = \"\"\r\n        let degreeError = \"\"\r\n        let branchError = \"\"\r\n        let degreePercentError = \"\"\r\n        let noOfBacklogsError = \"\"\r\n        let yeargapError = \"\"\r\n        if (!this.state.fresherId) {\r\n            fresherIdError = \"Fresher Id cannot be blank\"\r\n        }\r\n        if (!this.state.fresherName) {\r\n            fresherNameError = \"Name cannot be blank\";\r\n        }\r\n        else if (!this.state.fresherName.match(/^[a-zA-Z\\s]+$/)) {\r\n            fresherNameError = \" Name includes only alphabets\";\r\n        }\r\n        if (!this.state.email) {\r\n            emailError = \"Email cannot be blank\";\r\n        }\r\n        else if (!this.state.email.match(\"\\\\S+?@\\\\S+?\\\\.com\")) {\r\n            emailError = \"Enter valid mailid\";\r\n        }\r\n        if (!this.state.contactNo) {\r\n            contactNoError = \"Contact Number cannot be blank \";\r\n        }\r\n        else if (!this.state.contactNo.match(\"^[6-9]\\\\d{9}$\")) {\r\n            contactNoError = \"Plz Enter valid 10 digit contact number \";\r\n        }\r\n        if (!this.state.age) {\r\n            ageError = \"Age cannot be blank\";\r\n        }\r\n        else if (!this.state.age.match(\"^[1-9]{1,2}$\")) {\r\n            ageError = \"Enter valid age\";\r\n        }\r\n        if (!this.state.academic.hscPercent) {\r\n            hscPercentError = \"Please Enter HSC percentage\"\r\n        }\r\n        else if (!this.state.academic.hscPercent.match(\"^[1-9]{2}$\")) {\r\n            hscPercentError = \"Enter HSC Percentage in 2 decimals\"\r\n        }\r\n        if (!this.state.academic.sscPercent) {\r\n            sscPercentError = \"Please Enter SSC percentage\"\r\n        }\r\n        else if (!this.state.academic.sscPercent.match(\"^[1-9]{2}$\")) {\r\n            sscPercentError = \"Enter SSC Percentage in 2 decimals\"\r\n        }\r\n        if (!this.state.academic.degree.match(/^[a-zA-Z\\s]+$/)) {\r\n            degreeError = \"Degree name must include only alphabets\"\r\n        }\r\n        if (!this.state.academic.branch.match(/^[a-zA-Z\\s]+$/)) {\r\n            branchError = \"Branch name must include only alphabets\"\r\n        }\r\n        if (!this.state.academic.degreePercent.match(\"^[1-9]{2}$\")) {\r\n            degreePercentError = \"Enter Degree Percentage in 2 decimals\"\r\n        }\r\n        if (!this.state.academic.noOfBacklogs.match(\"^[0-9]{0,2}$\")) {\r\n            noOfBacklogsError = \"Number of backlogs is invalid\"\r\n        }\r\n        if (!this.state.academic.yeargap.match(\"^[0-9]{0,1}$\")) {\r\n            yeargapError = \"Year gap is invalid\"\r\n        }\r\n        if (fresherIdError || fresherNameError || emailError || contactNoError || ageError ||\r\n            hscPercentError || sscPercentError || degreeError || branchError || degreePercentError ||\r\n            noOfBacklogsError || yeargapError) {\r\n            this.setState({\r\n                fresherIdError, fresherNameError, emailError, contactNoError, ageError,\r\n                hscPercentError, sscPercentError, degreeError, branchError, degreePercentError, noOfBacklogsError, yeargapError\r\n            })\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n\r\n\r\n    handleSubmit1 = (e) => {\r\n        e.preventDefault()\r\n        const isValid = this.validate()\r\n        if (isValid) {\r\n            const URI = \"http://localhost:8080/fresher/edit/1\";\r\n            axios.put(URI, this.state).then((response) => {\r\n                this.setState({ answer: response.data })\r\n            })\r\n                .catch((error) => console.log(error));\r\n            alert(this.state.answer);\r\n        }\r\n\r\n\r\n\r\n    }\r\n    handleSkills1Change = (e) => {\r\n\r\n        // 1. Make a shallow copy of the projects\r\n        let skills = [...this.state.skills];\r\n        // 2. Make a shallow copy of the item you want to mutate\r\n        let skill = { ...skills[0] };\r\n        // 3. Replace the property you're intested in\r\n        skill.skillName = e.target.value;\r\n        // 4. Put it back into our array. N.B. we are mutating the array here, but that's why we made a copy first\r\n        skills[0] = skill;\r\n        // 5. Set the state to our new copy\r\n        this.setState({ skills });\r\n    }\r\n\r\n\r\n\r\n    handleProjectsChange = (e) => {\r\n        let projects = [this.state.projects];\r\n        let project = { ...projects[0] };\r\n        project.projectName = e.target.value;\r\n        projects[0] = project;\r\n        this.setState({ projects });\r\n    }\r\n    handlehobbyChange = (e) => {\r\n        let hobbies = [this.state.hobbies];\r\n        let hobby = { ...hobbies[0] };\r\n        hobby.hobbyName = e.target.value;\r\n        hobbies[0] = hobby;\r\n        this.setState({ hobbies });\r\n    }\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const isValid = this.validate()\r\n        if(isValid)\r\n        {\r\n        axios.get('http://localhost:8080/fresher' + '/' + this.state.fresherId).then((response) => {\r\n            this.setState({ users: response.data })\r\n\r\n        });\r\n\r\n        console.log(this.state.users.fresherName);\r\n        this.setState({ fresherName: this.state.users.fresherName });\r\n        this.setState({ email: this.state.users.email });\r\n        this.setState({ contactNo: this.state.users.contactNo });\r\n        this.setState({ address: this.state.users.address });\r\n        //projects?.[0]?.projectName=this.state.users?.projects?.[0]?.projectName;\r\n        var projects = { ...this.state.projects };\r\n        projects.projectName = this.state.users?.projects?.[0]?.projectName;\r\n        this.setState({ projects });\r\n\r\n        var skills = { ...this.state.skills };\r\n        skills.skillName = this.state.users?.skills?.[0]?.skillName;\r\n        this.setState({ skills });\r\n\r\n        var hobbies = { ...this.state.hobbies };\r\n        hobbies.hobbyName = this.state.users?.hobbies?.[0]?.hobbyName;\r\n        this.setState({ hobbies });\r\n\r\n        var academic = { ...this.state.academic };\r\n        academic.hscPercent = this.state.users?.academic?.hscPercent\r\n        academic.sscPercent = this.state.users?.academic?.sscPercent\r\n        academic.degree = this.state.users?.academic?.degree\r\n        academic.branch = this.state.users?.academic?.branch\r\n        academic.degreePercent = this.state.users?.academic?.degreePercent\r\n        academic.noOfBacklogs = this.state.users?.academic?.noOfBacklogs\r\n        academic.yeargap = this.state.users?.academic?.yeargap\r\n        this.setState({ academic });\r\n\r\n    }\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form method=\"POST\" onSubmit={this.handleSubmit} >\r\n                    <label>\r\n                        <div>\r\n                            <label>Enter Application Id</label>\r\n                            <input\r\n                                name=\"fresherId\"\r\n                                value={this.state.fresherId}\r\n                                className=\"form-control\"\r\n                                onChange={(event) => { this.setState({ fresherId: event.target.value }) }}\r\n                            />\r\n                            <p style={{ color: \"red\" }}>{this.state.fresherIdError}</p>\r\n                        </div>\r\n\r\n\r\n                    </label>\r\n                    <p>\r\n                        <button className=\"btn btn-outline-info mt-3 \" hover opacity=\"1\">Edit</button>\r\n                    </p>\r\n                </form>\r\n\r\n\r\n\r\n                <div className=\"card col-lg-6 offset-md-3 offset-md-3\">\r\n                    <div className=\"card-body\">\r\n\r\n\r\n\r\n                        <form method=\"POST\" onSubmit={this.handleSubmit1}>\r\n                            <h2 className=\"text-upper text-center text-dark\">PERSONAL INFORMATION</h2>\r\n\r\n\r\n                            <label>\r\n                                <div class=\"card-body\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col\">\r\n                                            <p class=\"text-left\">Name</p>\r\n                                            <input\r\n                                                type=\"text\"\r\n\r\n                                                value={this.state.fresherName}\r\n                                                onChange={(e) => this.setState({ fresherName: e.target.value })}\r\n                                                class=\"form-control\"\r\n                                                Placeholder=\"enter name\"\r\n                                            />\r\n                                            <p style={{ color: \"red\" }}>{this.state.fresherNameError}</p>\r\n                                        </div>\r\n                                        <div class=\"col\">\r\n                                            <p class=\"text-left\">Email</p>\r\n                                            <input\r\n                                                type=\"text\"\r\n\r\n                                                value={this.state.email}\r\n                                                className=\"form-control\"\r\n                                                onChange={(e) => this.setState({ email: e.target.value })}\r\n                                                Placeholder=\"enter email\"\r\n                                            />\r\n                                            <p style={{ color: \"red\" }}>{this.state.emailError}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col\">\r\n                                            <p class=\"text-left\">ContactNo</p>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                value={this.state.contactNo}\r\n                                                className=\"form-control\"\r\n                                                onChange={(e) => this.setState({ contactNo: e.target.value })}\r\n                                                Placeholder=\"enter contact no\"\r\n                                            />\r\n\r\n                                            <p style={{ color: \"red\" }}>{this.state.contactNoError}</p>\r\n\r\n                                        </div>\r\n\r\n                                        <div class=\"col\">\r\n                                            <p class=\"text-left\">Age</p>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                value={this.state.age}\r\n                                                className=\"form-control\"\r\n                                                onChange={(e) => this.setState({ age: e.target.value })}\r\n                                                Placeholder=\"enter age\"\r\n                                            />\r\n                                            <p style={{ color: \"red\" }}>{this.state.ageError}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <p class=\"text-left\">Address</p>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={this.state.address}\r\n                                            className=\"form-control\"\r\n                                            onChange={(e) => this.setState({ address: e.target.value })}\r\n                                            Placeholder=\"enter address\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <h2 className=\"text-upper text-center text-dark\">ACADEMIC INFORMATION</h2>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col\">\r\n                                        <p class=\"text-left\">HSC %</p>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={this.state.academic.hscPercent}\r\n                                            className=\"form-control\"\r\n                                            onChange={(e) => this.setState({ academic: { ...this.state.academic, hscPercent: e.target.value } })}\r\n                                            Placeholder=\"HSC %\"\r\n                                        />\r\n                                        <p style={{ color: \"red\" }}>{this.state.hscPercentError}</p>\r\n                                    </div>\r\n                                    <div class=\"col\">\r\n                                        <p class=\"text-left\">SSC %</p>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={this.state.academic.sscPercent}\r\n                                            className=\"form-control\"\r\n                                            onChange={(e) => this.setState({ academic: { ...this.state.academic, sscPercent: e.target.value } })}\r\n                                            Placeholder=\"SSC %\"\r\n                                        />\r\n                                        <p style={{ color: \"red\" }}>{this.state.sscPercentError}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <p></p>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col\">\r\n                                        <p class=\"text-left\">degree</p>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={this.state.academic.degree}\r\n                                            className=\"form-control\"\r\n                                            onChange={(e) => this.setState({ academic: { ...this.state.academic, degree: e.target.value } })}\r\n                                            Placeholder=\"Degree\"\r\n                                        />\r\n                                        <p style={{ color: \"red\" }}>{this.state.degreeError}</p>\r\n                                    </div>\r\n\r\n                                    <div class=\"col\">\r\n                                        <p class=\"text-left\">branch</p>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={this.state.academic.branch}\r\n                                            className=\"form-control\"\r\n                                            onChange={(e) => this.setState({ academic: { ...this.state.academic, branch: e.target.value } })}\r\n                                            Placeholder=\"branch\"\r\n                                        />\r\n                                        <p style={{ color: \"red\" }}>{this.state.branchError}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <p class=\"text-left\">Degree %</p>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.academic.degreePercent}\r\n                                        className=\"form-control\"\r\n                                        onChange={(e) => this.setState({ academic: { ...this.state.academic, degreePercent: e.target.value } })}\r\n                                        Placeholder=\"Degree %\"\r\n                                    />\r\n                                    <p style={{ color: \"red\" }}>{this.state.degreePercentError}</p>\r\n                                </div>\r\n                                <div>\r\n                                    <p class=\"text-left\">No of Backlogs</p>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.academic.noOfBacklogs}\r\n                                        className=\"form-control\"\r\n                                        onChange={(e) => this.setState({ academic: { ...this.state.academic, noOfBacklogs: e.target.value } })}\r\n                                        Placeholder=\"No of backlogs\"\r\n                                    />\r\n                                    <p style={{ color: \"red\" }}>{this.state.noOfBacklogsError}</p>\r\n                                </div>\r\n                                <div>\r\n                                    <p class=\"text-left\">year gap</p>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.academic.yeargap}\r\n                                        className=\"form-control\"\r\n                                        onChange={(e) => this.setState({ academic: { ...this.state.academic, yeargap: e.target.value } })}\r\n                                        Placeholder=\"year gap\"\r\n                                    />\r\n                                    <p style={{ color: \"red\" }}>{this.state.yeargapError}</p>\r\n                                </div>\r\n                                <h2 className=\"text-upper text-center text-dark\">HOBBIES</h2>\r\n                                <div>\r\n                                    <p class=\"text-left\">hobbyname</p>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.hobbies.hobbyName}\r\n                                        onChange={this.handlehobbyChange}\r\n                                        className=\"form-control\"\r\n                                        Placeholder=\"hobbyname\"\r\n\r\n                                    />\r\n                                </div>\r\n                                <h2 className=\"text-upper text-center text-dark\">PROJECTS</h2>\r\n                                <div>\r\n\r\n                                    <p class=\"text-left\">projectname</p>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.projects.projectName}\r\n                                        className=\"form-control\"\r\n                                        onChange={this.handleProjectsChange}\r\n                                        Placeholder=\"Project name\"\r\n                                    />\r\n                                </div>\r\n                                <h2 className=\"text-upper text-center text-dark\">TECHNICAL SKILLS</h2>\r\n                                <div>\r\n\r\n                                    <p class=\"text-left\">skill</p>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={this.state.skills.skillName}\r\n                                        className=\"form-control\"\r\n                                        onChange={this.handleSkills1Change}\r\n                                        Placeholder=\"skillname\"\r\n                                    />\r\n                                </div>\r\n\r\n                            </label>\r\n\r\n                            <p><button class=\"btn btn-primary\" hover opacity=\"1\">Save</button></p>\r\n                            <p style={{ color: \"green\" }}>{this.state.answer}</p>\r\n\r\n                        </form>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default EditForm","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\HeaderComponent.js",["193","194"],"\r\nimport React, { useState } from \"react\";\r\nimport HomeDesign from \"./HomeDesign\";\r\n\r\n\r\n\r\nfunction HeaderComponent() {\r\n \r\n    return (\r\n        <div>\r\n        <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div class=\"container-fluid\">\r\n          <a class=\"navbar-brand\" href=\"#\">RESUMEBUILDER</a>\r\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul class=\"navbar-nav\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"/home\">Home</a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" href=\"/admin\">Admin Login</a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" href=\"/fresher\">Fresher Login</a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" href=\"/experience\">Experience Login</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n       \r\n      </nav>\r\n      <HomeDesign></HomeDesign>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderComponent","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\ExperiencedLogin.js",[],"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\HomeComponent.js",["195"],"import React from 'react'\r\nimport Slides from './Slides'\r\n\r\nfunction HomeComponent() {\r\n    return (\r\n      <div>\r\n        <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div class=\"container-fluid\">\r\n          <a class=\"navbar-brand\" href=\"#\">RESUMEBUILDER</a>\r\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul class=\"navbar-nav\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"/home\">Home</a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" href=\"/admin\">Admin Login</a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" href=\"/fresher\">Fresher Login</a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" href=\"/experience\">Experience Login</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n       \r\n      </nav>\r\n        <Slides></Slides>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default HomeComponent","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\FresherRegister.js",[],"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\FresherLogin.js",["196","197","198","199","200","201","202","203"],"\r\n\r\nimport React,{Component} from 'react';\r\nimport { BrowserRouter as Router ,Switch , Route, useHistory } from 'react-router-dom'\r\n//import UserService from '../services/UserService';\r\nimport axios from 'axios';\r\nimport AdminLogin from './AdminLogin';\r\nimport FresherRegister from './FresherRegister';\r\nimport './Login.css'\r\n\r\nclass FresherLogin extends Component{\r\nconstructor(props){\r\n    super(props)\r\n    this.state={\r\n        users:[],\r\n        username:'',\r\n        password:'',\r\n        answer:''\r\n    }\r\n}\r\n\r\n    handleSubmit=(e)=>{\r\n    e.preventDefault();\r\n    \r\n    axios.get('http://localhost:8080/fresher'+ '/' + this.state.password+ '/' + this.state.username).\r\n    then((response)=>{this.setState({answer: response.data}) }\r\n    );\r\n    \r\n    if(this.state.answer==='Login Successfully'){\r\n      this.props.history.push('/view');\r\n    }\r\n    }\r\n  \r\nrender(){\r\n    return (\r\n      <div class=\"bg-img\">\r\n      \r\n      <div className = \"card-body\">\r\n       <div  box-sizing= \"border-box\">\r\n        <h2 style={{color:\"white\"}}> Login </h2>\r\n        <form method=\"POST\" onSubmit={this.handleSubmit} >\r\n        <label>\r\n        <div>\r\n        <p class=\"text-center\"><b>USERNAME</b></p>\r\n        \r\n              <input\r\n                name=\"username\"\r\n                value={this.state.username}\r\n                className=\"form-control\"\r\n                onChange={(event)=>{this.setState({username:event.target.value})}}\r\n                Placeholder=\"username\"\r\n                \r\n               \r\n              />\r\n            </div>\r\n            <div>\r\n           \r\n            <p class=\"text-center\"><b>PASSWORD</b></p>\r\n            <input\r\n            type=\"password\"\r\n              name=\"password\"\r\n             \r\n              value={this.state.password}\r\n              className=\"form-control\"\r\n              onChange={(event)=>{this.setState({password:event.target.value})}}\r\n              Placeholder=\"password\"\r\n                \r\n             \r\n            />\r\n          </div>\r\n       \r\n      </label>\r\n      <p></p>\r\n      <p>\r\n     \r\n      <button class=\"btn btn-primary\"  hover opacity=\"1\">Log in</button>\r\n      </p>\r\n      <p style={{color:\"white\"}}>{this.state.answer}</p>\r\n       \r\n\r\n      <h4 style={{color:\"orange\"}}>New User??? </h4><a class=\"white-link\" href=\"/register\"><b>Click here for Registration</b></a>\r\n\r\n     <br></br>\r\n      <br></br>\r\n      <br></br>\r\n    \r\n      \r\n  \r\n    \r\n      </form>\r\n         \r\n      \r\n      \r\n        </div>\r\n        </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n}\r\nexport default FresherLogin;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\AdminLogin.js",[],"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\FreshNavbar.js",["204"],"\r\nimport React from 'react'\r\n\r\nimport { BrowserRouter ,Switch , Route } from 'react-router-dom'\r\n\r\nimport EditForm from './EditFresher'\r\nimport FormHeader from './FormHeader'\r\nimport FPersonalInfo from './FPersonalInfo'\r\nimport ViewForm from './ViewForm'\r\nimport FreshDownload from './FreshDownload'\r\nimport './Login.css'\r\nfunction FreshNavbar (props) {\r\n    return (\r\n       <div class=\"o-img\">\r\n        <div className=\"App\">\r\n       <FormHeader></FormHeader>\r\n        <BrowserRouter>\r\n        <switch>\r\n        \r\n        <Route path='/first' component={FPersonalInfo}/>\r\n        <Route path='/viewresume' component={ViewForm}/>\r\n        <Route path='/edit' component={EditForm}/>\r\n        <Route path='/fdownload' component={FreshDownload}/>\r\n          \r\n        </switch>\r\n        </BrowserRouter>\r\n        </div>\r\n       </div>\r\n    )\r\n}\r\nexport default FreshNavbar","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\FPersonalInfo.js",[],"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\ExperiencedRegister.js",["205","206"],"import React, { useState } from \"react\";\r\nimport axios from 'axios';\r\nimport ExperiencedService from '../services/ExperiencedService'\r\n\r\nfunction ExperiencedRegister() {\r\n    const [register, setRegister] = useState({\r\n        userId: \"\",\r\n        password: \"\",\r\n        userIdError: \"\",\r\n        passwordError: \"\",\r\n        answer:\"\",\r\n        isprocess:true\r\n\r\n      });\r\n\r\n     let  validate=()=>\r\n      {\r\n        let userIdError=\"\";\r\n        let passwordError=\"\";\r\n        \r\n        if(!register.userId.match(/^[a-zA-Z0-9\\s]+$/))\r\n      {\r\n        userIdError=\" Id can't be empty and can only include alphabets and numbers\";\r\n      }\r\n      if(!register.password.match(\"[A-Za-z0-9]{5,}\"))\r\n      {\r\n        passwordError=\"Password should be atleast 5 characters and alphanumeric e.g: asR34 \";\r\n      }\r\n       \r\n  \r\n        if(userIdError || passwordError)\r\n        {\r\n          setRegister({userIdError,passwordError})\r\n          return false\r\n        }\r\n        return true\r\n      }\r\n\r\n      let handleSubmit = (e) => {\r\n        \r\n        e.preventDefault();\r\n        const isValid = validate();\r\n      if(isValid)\r\n      {\r\n       \r\n    \r\n    // axios\r\n    //   .post(URI, register).then((response)=>{\r\n    //     setRegister({answer: response.data})\r\n    // })\r\n    //   .catch((error) => console.log(error));\r\n\r\n    let user={\r\n      userId:register.userId,\r\n      password:register.password\r\n    }\r\n\r\n    ExperiencedService.register(user).then((response)=>{setRegister({answer: response.data})}).\r\n    catch((error) => console.log(error))\r\n      \r\n      }\r\n     \r\n    }\r\n    \r\n    return (\r\n        <div class=\"bg-img\">\r\n        <div id=\"register\">\r\n        <h3 style={{color:\"white\"}}>REGISTRATION</h3>\r\n          <form method=\"POST\" onSubmit={handleSubmit}>\r\n          <label>\r\n          <div>\r\n          <p class=\"text-center\"><b>USERNAME</b></p>\r\n            <input\r\n              type=\"text\"\r\n              value={register.userId}\r\n              onChange={(e) => setRegister({ ...register, userId: e.target.value })}\r\n              className=\"form-control\"\r\n            />\r\n            <p style={{color:\"red\"}}>{register.userIdError}</p>\r\n          </div>\r\n          <div>\r\n          <p class=\"text-center\"><b>PASSWORD</b></p>\r\n          <input\r\n            type=\"text\"\r\n            value={register.password}\r\n            className=\"form-control\"\r\n            onChange={(e) => setRegister({ ...register, password: e.target.value })}\r\n          />\r\n                \r\n              <p style={{color:\"red\"}}>{register.passwordError}</p>\r\n            \r\n          </div>\r\n          </label>\r\n          <p><button class=\"btn btn-primary\" hover opacity=\"1\">Register</button></p>\r\n          <p style={{color:\"green\"}}>{register.answer}</p>\r\n\r\n        </form>\r\n        <p style={{color:\"blue\"}}><a class=\"nav-link\" href=\"/experience\">Click here to login</a></p>\r\n        </div>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default ExperiencedRegister","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\FormHeader.js",["207","208"],"\r\nimport React, { useState } from \"react\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nfunction FormHeader() {\r\n \r\nreturn (\r\n      <div>\r\n        <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div class=\"container-fluid\">\r\n          <a class=\"navbar-brand\" href=\"#\">RESUMEBUILDER</a>\r\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul class=\"navbar-nav\">\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"/first\">Create Resume</a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" href=\"/viewresume\">View Created Resume Resume</a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n              <a class=\"nav-link active\" href=\"/fdownload\">Download Created Resume</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n            <a class=\"nav-link active\" href=\"/\">Log out</a>\r\n          </li>\r\n            \r\n              \r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormHeader","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\ViewForm.js",["209","210","211"],"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\EHeaderComponent.js",["212"],"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\DownloadExResume.js",[],"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\ExperiencedMain.js",[],"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\CreateExResume.js",["213"],"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\FreshDownload.js",[],"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\EditFresher.js",["214"],"import React from 'react';\r\n\r\n//import UserService from '../services/UserService';\r\nimport axios from 'axios';\r\n\r\nclass EditFresher extends React.Component{\r\nconstructor(props){\r\n    super(props)\r\n    this.state={\r\n        users:[],\r\n        answer:\"\",\r\n        fresherId:'',\r\n       \r\n        fresherName: \"\",\r\n            email: \"\",\r\n            contactNo: \"\",\r\n            age: \" \",\r\n            address:\"\",\r\n            fresherNameError:\"\",\r\n            emailError: \"\",\r\n            contactNoError: \"\",\r\n            skills: [\r\n                {\r\n                    \r\n                    skillName: \"java\"\r\n                \r\n                }\r\n            ],\r\n            \r\n            hobbies: [\r\n                {\r\n                    \r\n                    hobbyName: \" \"\r\n            \r\n                }\r\n            ],\r\n            projects: [\r\n                {\r\n                    \r\n                    projectName: \"\",\r\n                    year: \"2018\"\r\n                    \r\n                }\r\n            ],\r\n            academic:{\r\n                hscPercent: \"\",\r\n               sscPercent: \"\",\r\n               degree: \"\",\r\n               branch: \"\",\r\n               degreePercent: \"\",\r\n               noOfBacklogs: \" \",\r\n               yeargap: \" \"\r\n               \r\n           }\r\n        }\r\n\r\n\r\n\r\n    }\r\n    validate=()=>\r\n      {\r\n        let fresherNameError=\"\";\r\n        let emailError=\"\";\r\n        let contactNoError=\"\"\r\n        \r\n        if(!this.state.fresherName.match(/^[a-zA-Z\\s]+$/))\r\n      {\r\n        fresherNameError=\" name not null includes only alphabets\";\r\n      }\r\n      if(!this.state.email.match(\"\\\\S+?@\\\\S+?\\\\.com\"))\r\n      {\r\n        emailError=\"Enter valid mailid\";\r\n      }\r\n      if(!this.state.contactNo.match(\"^[6-9]\\\\d{9}$\"))\r\n      {\r\n        contactNoError=\"Plz Enter valid ContactNo 10 digit no \";\r\n      }\r\n       \r\n        /*\r\n        if(!this.state.email.match(\"\\\\S+?@\\\\S+?\\\\.com\"))\r\n        {\r\n          emailError=\"Invalid email\"\r\n        }\r\n        if(!this.state.mobile.match(\"^[6-9]\\\\d{9}$\"))\r\n        {\r\n          mobileError=\"Invalid mobile number\"\r\n        }*/\r\n        if(fresherNameError || emailError || contactNoError)\r\n        {\r\n          this.setState({fresherNameError,emailError,contactNoError})\r\n          return false\r\n        }\r\n        return true\r\n      }\r\n\r\n    \r\n\r\n    handleSubmit1 = (e) => {\r\n        \r\n        const URI = \"http://localhost:8080/fresher/edit/1\";\r\n        axios.put(URI,this.state).then((response)=>{\r\n            this.setState({answer: response.data})\r\n        })\r\n        .catch((error) => console.log(error));\r\n         alert(this.state.answer);\r\n        \r\n        \r\n      \r\n     \r\n    }\r\n    handleSkills1Change = (e) => {\r\n        \r\n        // 1. Make a shallow copy of the projects\r\n        let skills = [...this.state.skills];\r\n        // 2. Make a shallow copy of the item you want to mutate\r\n        let skill = {...skills[0]};\r\n        // 3. Replace the property you're intested in\r\n        skill.skillName = e.target.value;\r\n        // 4. Put it back into our array. N.B. we are mutating the array here, but that's why we made a copy first\r\n        skills[0] = skill;\r\n        // 5. Set the state to our new copy\r\n        this.setState({skills});\r\n    }\r\n\r\n\r\n\r\n    handleProjectsChange = (e) => {\r\n        let projects = [this.state.projects];\r\n        let project = {...projects[0]};\r\n        project.projectName = e.target.value;\r\n       projects[0] = project;\r\n       this.setState({projects});\r\n   }\r\n   handlehobbyChange = (e) => {\r\n    let hobbies = [this.state.hobbies];\r\n    let hobby = {...hobbies[0]};\r\n    hobby.hobbyName = e.target.value;\r\n   hobbies[0] = hobby;\r\n   this.setState({hobbies});\r\n}\r\n\r\n\r\n    handleSubmit=(e)=>{\r\n    e.preventDefault();\r\n    \r\n    axios.get('http://localhost:8080/fresher' + '/'+this.state.fresherId).then((response)=>{\r\n        this.setState({users: response.data})\r\n\r\n    });\r\n    \r\n    console.log(this.state.users.fresherName);\r\n    this.setState({fresherName:this.state.users.fresherName});\r\n    this.setState({email:this.state.users.email});\r\n    this.setState({contactNo:this.state.users.contactNo});\r\n    this.setState({address:this.state.users.address});\r\n    //projects?.[0]?.projectName=this.state.users?.projects?.[0]?.projectName;\r\n   var projects={...this.state.projects};\r\n   projects.projectName=this.state.users?.projects?.[0]?.projectName;\r\n   this.setState({projects});\r\n\r\n   var skills={...this.state.skills};\r\n   skills.skillName=this.state.users?.skills?.[0]?.skillName;\r\n   this.setState({skills});\r\n\r\n   var hobbies={...this.state.hobbies};\r\n   hobbies.hobbyName=this.state.users?.hobbies?.[0]?.hobbyName;\r\n   this.setState({hobbies});\r\n\r\n   var academic={...this.state.academic};\r\n   academic.hscPercent=this.state.users?.academic?.hscPercent\r\n   academic.sscPercent=this.state.users?.academic?.sscPercent\r\n   academic.degree=this.state.users?.academic?.degree\r\n   academic.branch=this.state.users?.academic?.branch\r\n   academic.degreePercent=this.state.users?.academic?.degreePercent\r\n   academic.noOfBacklogs=this.state.users?.academic?.noOfBacklogs\r\n   academic.yeargap=this.state.users?.academic?.yeargap\r\n   this.setState({academic});\r\n        \r\n    \r\n   \r\n    \r\n}\r\n \r\n\r\nrender(){\r\n    return (\r\n   <div>\r\n   <form method=\"POST\" onSubmit={this.handleSubmit} >\r\n   <label>\r\n   <div>\r\n         <label>Enter Application Id</label>\r\n         <input\r\n           name=\"fresherId\"\r\n           value={this.state.fresherId}\r\n           className=\"form-control\"\r\n           onChange={(event)=>{this.setState({fresherId:event.target.value})}}\r\n           \r\n          \r\n         />\r\n       </div>\r\n       \r\n  \r\n </label>\r\n <p>\r\n <button className=\"btn btn-outline-info mt-3 \" hover opacity=\"1\">Edit</button>\r\n </p>\r\n </form>\r\n\r\n\r\n\r\n <div className = \"card col-lg-6 offset-md-3 offset-md-3\">\r\n <div className = \"card-body\">\r\n\r\n        \r\n           \r\n          <form method=\"POST\" onSubmit={this.handleSubmit1}>\r\n          <h2 className=\"text-upper text-center text-dark\">PERSONAL INFORMATION</h2>\r\n    \r\n          \r\n          <label>\r\n          <div class=\"card-body\">\r\n          <div class=\"row\">\r\n          <div class=\"col\">\r\n          <p class=\"text-left\">Name</p>\r\n            <input\r\n              type=\"text\"\r\n                    \r\n              value={this.state.fresherName}\r\n              onChange={(e) => this.setState({fresherName: e.target.value })}\r\n              class=\"form-control\"\r\n              Placeholder=\"enter name\"\r\n            />\r\n            <p style={{color:\"red\"}}>{this.state.fresherNameError}</p>\r\n          </div>\r\n          <div class=\"col\">\r\n          <p class=\"text-left\">Email</p>\r\n            <input\r\n              type=\"text\"\r\n              \r\n              value={this.state.email}\r\n              className=\"form-control\"\r\n              onChange={(e) => this.setState({ email: e.target.value })}\r\n              Placeholder=\"enter email\"\r\n            />\r\n            \r\n          </div>\r\n          </div>\r\n          <div class=\"row\">\r\n          <div class=\"col\">\r\n          <p class=\"text-left\">ContactNo</p>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.contactNo}\r\n            className=\"form-control\"\r\n            onChange={(e) => this.setState({contactNo: e.target.value })}\r\n            Placeholder=\"enter contact no\"\r\n          />\r\n                \r\n              <p style={{color:\"red\"}}>{this.state.contactNoError}</p>\r\n            \r\n          </div>\r\n          \r\n          <div class=\"col\">\r\n          <p class=\"text-left\">Age</p>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.age}\r\n            className=\"form-control\"\r\n            onChange={(e) => this.setState({age: e.target.value })}\r\n            Placeholder=\"enter age\"\r\n          />\r\n        </div>\r\n        </div>\r\n        <div>\r\n        <p class=\"text-left\">Address</p>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.address}\r\n          className=\"form-control\"\r\n          onChange={(e) => this.setState({address: e.target.value })}\r\n          Placeholder=\"enter address\"\r\n        />\r\n       </div>\r\n       </div>\r\n       \r\n       \r\n      <h2 className=\"text-upper text-center text-dark\">ACADEMIC INFORMATION</h2>\r\n      <div class=\"row\">\r\n      <div class=\"col\">\r\n      <p class=\"text-left\">HSC %</p>\r\n      <input\r\n        type=\"text\"\r\n        value={this.state.academic.hscPercent}\r\n        className=\"form-control\"\r\n       onChange={(e) => this.setState({ academic: { ...this.state.academic, hscPercent:e.target.value}})}\r\n       Placeholder=\"HSC %\"\r\n      \r\n      />\r\n     </div>\r\n       <div class=\"col\">\r\n       <p class=\"text-left\">SSC %</p>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.academic.sscPercent}\r\n          className=\"form-control\"\r\n         onChange={(e) => this.setState({ academic: { ...this.state.academic, sscPercent:e.target.value}})}\r\n         Placeholder=\"SSC %\"\r\n        />\r\n        </div>\r\n       </div>\r\n       <p></p>\r\n       <div class=\"row\">\r\n       <div class=\"col\">\r\n       <p class=\"text-left\">degree</p>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.academic.degree}\r\n          className=\"form-control\"\r\n          onChange={(e) => this.setState({ academic: { ...this.state.academic, degree:e.target.value}})}\r\n          Placeholder=\"Degree\"\r\n        \r\n        />\r\n       </div>\r\n\r\n       <div class=\"col\">\r\n       <p class=\"text-left\">branch</p>\r\n       <input\r\n         type=\"text\"\r\n         value={this.state.academic.branch}\r\n         className=\"form-control\"\r\n         onChange={(e) => this.setState({ academic: { ...this.state.academic, branch:e.target.value}})}\r\n         Placeholder=\"branch\"\r\n        \r\n       />\r\n      </div>\r\n      </div>\r\n      <div>\r\n      <p class=\"text-left\">Degree %</p>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.academic.degreePercent}\r\n          className=\"form-control\"\r\n          onChange={(e) => this.setState({ academic: { ...this.state.academic, degreePercent:e.target.value}})}\r\n          Placeholder=\"Degree %\"\r\n        />\r\n       </div>\r\n       <div>\r\n       <p class=\"text-left\">No of Backlogs</p>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.academic.noOfBacklogs}\r\n          className=\"form-control\"\r\n          onChange={(e) => this.setState({ academic: { ...this.state.academic, noOfBacklogs:e.target.value}})}\r\n          Placeholder=\"No of backlogs\"\r\n        />\r\n       </div>\r\n       <div>\r\n       <p class=\"text-left\">year gap</p>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.academic.yeargap}\r\n          className=\"form-control\"\r\n          onChange={(e) => this.setState({ academic: { ...this.state.academic, yeargap:e.target.value}})}\r\n          Placeholder=\"year gap\"\r\n        />\r\n       </div>\r\n       <h2 className=\"text-upper text-center text-dark\">HOBBIES</h2>\r\n       <div>\r\n       <p class=\"text-left\">hobbyname</p>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.hobbies.hobbyName}\r\n          onChange={this.handlehobbyChange}\r\n          className=\"form-control\"\r\n          Placeholder=\"hobbyname\"\r\n        \r\n        />\r\n       </div>\r\n       <h2 className=\"text-upper text-center text-dark\">PROJECTS</h2>\r\n       <div>\r\n        \r\n        <p class=\"text-left\">projectname</p>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.projects.projectName}\r\n          className=\"form-control\"\r\n         onChange={this.handleProjectsChange}\r\n         Placeholder=\"Project name\"\r\n        />\r\n       </div>\r\n       <h2 className=\"text-upper text-center text-dark\">TECHNICAL SKILLS</h2>\r\n       <div>\r\n       \r\n       <p class=\"text-left\">skill</p>\r\n       <input\r\n         type=\"text\"\r\n         value={this.state.skills.skillName}\r\n         className=\"form-control\"\r\n         onChange={this.handleSkills1Change}\r\n         Placeholder=\"skillname\"\r\n       />\r\n      </div>\r\n     \r\n       </label>\r\n    \r\n          <p><button class=\"btn btn-primary\" hover opacity=\"1\">Save</button></p>\r\n          <p style={{color:\"green\"}}>{this.state.answer}</p>\r\n          \r\n        </form>\r\n        \r\n        </div>\r\n        </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default EditFresher","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\ForgetPassword.js",[],"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\LoginComponent.js",["215"],"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\AdminMenu.js",["216"],"import React, { Component } from 'react';\r\n\r\nimport l3 from './l3.jpg';\r\nclass AdminMenu extends Component {\r\n    constructor(props) {\r\n        super(props)  \r\n\r\n        this.state = {\r\n                 \r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n           <div>\r\n                <div class= \"p-2 mb-1\">\r\n                <header>\r\n                <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <div class=\"container-fluid\">\r\n\r\n                   \r\n                    <a  href=\"/admin\" className=\"navbar-brand  text-light p-3\"><h3 >MENU</h3></a>\r\n                    <a href=\"/admin/userslist\"  className=\"text-light  text-light p-3\">EXPERIENCED INFO</a>\r\n                    <a href=\"/admin/allfreshers\" className=\"text-light p-3\">FRESHERS INFO</a>\r\n                    \r\n                    <a href=\"/admin\" className=\"bg-dark text-light\">LOGOUT</a>\r\n                    </div>\r\n                    </nav>\r\n            <br></br>\r\n            <img src=\"https://i.pinimg.com/originals/b9/49/c8/b949c86a570df07a7440abe39405834c.gif\" className=\"big-banner\"   alt=\"Responsive\"></img>\r\n       \r\n                    \r\n                </header>\r\n            </div>\r\n           </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default AdminMenu\r\n","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\ListOfFreshers.js",[],"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\ListOfUsers.js",[],"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\HomeDesign.js",[],"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\AHeaderComponent.js",["217"],"import React, { Component } from 'react'\r\nimport {BsPerson} from \"react-icons/bs\";\r\nimport {MdLockOpen} from \"react-icons/md\";\r\nclass HeaderComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n                 \r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n        return ( \r\n            <div>\r\n                \r\n                <nav class=\" bg-dark\">\r\n        \r\n                    <a class=\"active\" href=\"/admin\" className=\"navbar-brand   text-light p-2 \"><h3 >WELCOME ADMIN</h3></a>\r\n                    <a href=\"/login\"  className=\"text-light  text-light \"><BsPerson />LOGIN</a>\r\n                    <a href=\"/forgetpassword\" className=\"text-light p-5\"><MdLockOpen/>FORGETPASSWORD</a>\r\n                    <a href=\"/\"className=\"   text-light\">HOME</a>\r\n                  \r\n                   </nav>\r\n                   <br></br>\r\n                  \r\n           <img src=\"https://media0.giphy.com/media/gh0RRgkTXedvF0pDc0/giphy.gif?cid=ecf05e4704e793f2189e7657330a99727f3fd7abc923e942&rid=giphy.gif\" width=\"1400\" height=\"620\" className=\"float-right\"/>       \r\n            </div>\r\n            \r\n)\r\n    }\r\n}\r\n\r\nexport default HeaderComponent\r\n","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\LogoutComponent.js",[],"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\UpdateExResume.js",["218"],"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\ViewExResume.js",[],"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\services\\AdminService.js",[],"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\services\\FresherService.js",["219","220"],"import axios from 'axios';\r\n\r\nconst FRESHER_API__BASE_URL = \"http://localhost:8080/fresher\";\r\n\r\nclass FresherService {\r\n\r\n    getResumeById(resumeId)\r\n    {\r\n        return axios.get(FRESHER_API__BASE_URL + '/' + resumeId);\r\n    }  \r\n\r\n    saveFresher(fresher) {\r\n        return axios.post(FRESHER_API__BASE_URL + \"/\", fresher);\r\n    }\r\n\r\n    getFresherById(id) {\r\n        return axios.get(FRESHER_API__BASE_URL + \"/\" + id);\r\n    }\r\n\r\n\r\n    deleteFresherById(id) {\r\n        return axios.delete(FRESHER_API__BASE_URL + \"/deleteFresherById/\" + id);\r\n    }\r\n\r\n    login(user, pass) {\r\n        return axios.get(FRESHER_API__BASE_URL + \"/login\" + \"/\" + pass + \"/\" + user)\r\n    }\r\n\r\n    register(user) {\r\n        return axios.post(FRESHER_API__BASE_URL + \"/register\", user)\r\n    }\r\n\r\n    updateFresher(id, fresher) {\r\n        return axios.put(FRESHER_API__BASE_URL + \"/\" + id, id, fresher)\r\n    }\r\n\r\n    getPdfGeneratedById(id, template) {\r\n        return axios.get( 'http://localhost:8080/fresher/download' + '/' + id + '/' + template, { responseType: 'blob' });\r\n    }\r\n\r\n}\r\n\r\nexport default new FresherService()\r\n\r\n","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\Slides.js",[],"C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\FreshPassForgot.js",["221","222"],"import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\n\r\nclass FreshPassForgot extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            \r\n            username:'',\r\n            password:'',\r\n            fmessage:''\r\n            \r\n        }\r\n    }\r\n\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        let fbody={username:this.state.username,password:this.state.password};\r\n        axios.patch('http://localhost:8080/fresher/forgetpass',fbody).\r\n        then((response)=>{\r\n            this.props.history.push('/fresher');\r\n        }).catch((error)=>{\r\n            \r\n       alert(error.response.data.message);\r\n        });\r\n        \r\n        }\r\n    render() {\r\n        return(\r\n        <div class=\"p-img\">\r\n      \r\n        <div className = \"card-body\">\r\n         <div  box-sizing= \"border-box\">\r\n          \r\n\r\n         <br></br>\r\n          <form method=\"POST\" onSubmit={this.handleSubmit} >\r\n          <label>\r\n          <div>\r\n          <h4 style={{color:\"blue\"}}> USERNAME </h4>\r\n          \r\n                <input\r\n                  name=\"username\"\r\n                  value={this.state.username}\r\n                  className=\"form-control\"\r\n                  onChange={(event)=>{this.setState({username:event.target.value})}}\r\n                  Placeholder=\"username\"\r\n                  \r\n                 \r\n                />\r\n              </div>\r\n              <div>\r\n             \r\n              <h4 style={{color:\"blue\"}}> PASSWORD </h4>\r\n          \r\n              <input\r\n              type=\"password\"\r\n                name=\"password\"\r\n               \r\n                value={this.state.password}\r\n                className=\"form-control\"\r\n                onChange={(event)=>{this.setState({password:event.target.value})}}\r\n                Placeholder=\"password\"\r\n                  \r\n               \r\n              />\r\n            </div>\r\n         \r\n        </label>\r\n        <p></p>\r\n        <p>\r\n       \r\n        <button class=\"btn btn-primary\"  hover opacity=\"1\">Change Password</button>\r\n        </p>\r\n       \r\n        </form>\r\n       \r\n          </div>\r\n          </div>\r\n          </div>\r\n        )\r\n    }\r\n        \r\n  }\r\n  export default FreshPassForgot;","C:\\Users\\User\\Documents\\ReactJS\\Sprint3ReactApp\\resumetemplate\\src\\Component\\ExperiencedForgotPass.js",["223","224","225"],"import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport ExperiencedService from '../services/ExperiencedService';\r\n\r\nclass  ExperiencedForgotPass extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            \r\n            userId:'',\r\n            password:'',\r\n            fmessage:''\r\n            \r\n        }\r\n    }\r\n\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        let ubody={userId:this.state.userId,password:this.state.password};\r\n        ExperiencedService.updateExperiencedPass(ubody).\r\n        then((response)=>{\r\n            this.props.history.push('/experience');\r\n        }).catch((error)=>{\r\n            \r\n       alert(error.response.data.message);\r\n        });\r\n        \r\n        }\r\n    render() {\r\n        return(\r\n        <div class=\"p-img\">\r\n      \r\n        <div className = \"card-body\">\r\n         <div  box-sizing= \"border-box\">\r\n          \r\n\r\n         <br></br>\r\n          <form method=\"POST\" onSubmit={this.handleSubmit} >\r\n          <label>\r\n          <div>\r\n          <h4 style={{color:\"blue\"}}> USER ID </h4>\r\n          \r\n                <input\r\n                  name=\"username\"\r\n                  value={this.state.userId}\r\n                  className=\"form-control\"\r\n                  onChange={(event)=>{this.setState({userId:event.target.value})}}\r\n                  Placeholder=\"User Id\"\r\n                  \r\n                 \r\n                />\r\n              </div>\r\n              <div>\r\n             \r\n              <h4 style={{color:\"blue\"}}> NEW PASSWORD </h4>\r\n          \r\n              <input\r\n              type=\"password\"\r\n                name=\"password\"\r\n               \r\n                value={this.state.password}\r\n                className=\"form-control\"\r\n                onChange={(event)=>{this.setState({password:event.target.value})}}\r\n                Placeholder=\"New Password\"\r\n                  \r\n               \r\n              />\r\n            </div>\r\n         \r\n        </label>\r\n        <p></p>\r\n        <p>\r\n       \r\n        <button class=\"btn btn-primary\"  hover opacity=\"1\">Change Password</button>\r\n        </p>\r\n       \r\n        </form>\r\n       \r\n          </div>\r\n          </div>\r\n          </div>\r\n        )\r\n    }\r\n        \r\n  }\r\n  export default ExperiencedForgotPass;",{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","replacedBy":"229"},{"ruleId":"226","replacedBy":"230"},{"ruleId":"228","replacedBy":"231"},{"ruleId":"232","severity":1,"message":"233","line":2,"column":8,"nodeType":"234","messageId":"235","endLine":2,"endColumn":13},{"ruleId":"232","severity":1,"message":"236","line":6,"column":7,"nodeType":"234","messageId":"235","endLine":6,"endColumn":10},{"ruleId":"226","replacedBy":"237"},{"ruleId":"228","replacedBy":"238"},{"ruleId":"239","severity":1,"message":"240","line":20,"column":62,"nodeType":"241","messageId":"242","endLine":20,"endColumn":63},{"ruleId":"239","severity":1,"message":"240","line":202,"column":51,"nodeType":"241","messageId":"242","endLine":202,"endColumn":52},{"ruleId":"232","severity":1,"message":"243","line":2,"column":17,"nodeType":"234","messageId":"235","endLine":2,"endColumn":25},{"ruleId":"244","severity":1,"message":"245","line":13,"column":11,"nodeType":"246","endLine":13,"endColumn":44},{"ruleId":"244","severity":1,"message":"245","line":9,"column":11,"nodeType":"246","endLine":9,"endColumn":44},{"ruleId":"232","severity":1,"message":"247","line":4,"column":27,"nodeType":"234","messageId":"235","endLine":4,"endColumn":33},{"ruleId":"232","severity":1,"message":"248","line":4,"column":35,"nodeType":"234","messageId":"235","endLine":4,"endColumn":41},{"ruleId":"232","severity":1,"message":"249","line":4,"column":44,"nodeType":"234","messageId":"235","endLine":4,"endColumn":49},{"ruleId":"232","severity":1,"message":"250","line":4,"column":51,"nodeType":"234","messageId":"235","endLine":4,"endColumn":61},{"ruleId":"232","severity":1,"message":"251","line":7,"column":8,"nodeType":"234","messageId":"235","endLine":7,"endColumn":18},{"ruleId":"232","severity":1,"message":"252","line":8,"column":8,"nodeType":"234","messageId":"235","endLine":8,"endColumn":23},{"ruleId":"239","severity":1,"message":"240","line":25,"column":46,"nodeType":"241","messageId":"242","endLine":25,"endColumn":47},{"ruleId":"253","severity":1,"message":"254","line":25,"column":101,"nodeType":"255","messageId":"256","endLine":25,"endColumn":102,"fix":"257"},{"ruleId":"232","severity":1,"message":"248","line":4,"column":25,"nodeType":"234","messageId":"235","endLine":4,"endColumn":31},{"ruleId":"232","severity":1,"message":"233","line":2,"column":8,"nodeType":"234","messageId":"235","endLine":2,"endColumn":13},{"ruleId":"253","severity":1,"message":"254","line":58,"column":95,"nodeType":"255","messageId":"256","endLine":58,"endColumn":96,"fix":"258"},{"ruleId":"232","severity":1,"message":"243","line":2,"column":17,"nodeType":"234","messageId":"235","endLine":2,"endColumn":25},{"ruleId":"244","severity":1,"message":"245","line":11,"column":11,"nodeType":"246","endLine":11,"endColumn":44},{"ruleId":"239","severity":1,"message":"240","line":23,"column":47,"nodeType":"241","messageId":"242","endLine":23,"endColumn":48},{"ruleId":"239","severity":1,"message":"240","line":46,"column":64,"nodeType":"241","messageId":"242","endLine":46,"endColumn":65},{"ruleId":"259","severity":1,"message":"260","line":83,"column":11,"nodeType":"246","endLine":83,"endColumn":39},{"ruleId":"244","severity":1,"message":"245","line":14,"column":13,"nodeType":"246","endLine":14,"endColumn":46},{"ruleId":"232","severity":1,"message":"261","line":97,"column":17,"nodeType":"234","messageId":"235","endLine":97,"endColumn":19},{"ruleId":"239","severity":1,"message":"240","line":146,"column":47,"nodeType":"241","messageId":"242","endLine":146,"endColumn":48},{"ruleId":"232","severity":1,"message":"262","line":4,"column":9,"nodeType":"234","messageId":"235","endLine":4,"endColumn":11},{"ruleId":"232","severity":1,"message":"263","line":3,"column":8,"nodeType":"234","messageId":"235","endLine":3,"endColumn":10},{"ruleId":"264","severity":1,"message":"265","line":28,"column":12,"nodeType":"246","endLine":28,"endColumn":201},{"ruleId":"239","severity":1,"message":"240","line":161,"column":52,"nodeType":"241","messageId":"242","endLine":161,"endColumn":53},{"ruleId":"239","severity":1,"message":"240","line":26,"column":59,"nodeType":"241","messageId":"242","endLine":26,"endColumn":60},{"ruleId":"239","severity":1,"message":"240","line":38,"column":68,"nodeType":"241","messageId":"242","endLine":38,"endColumn":69},{"ruleId":"232","severity":1,"message":"266","line":1,"column":17,"nodeType":"234","messageId":"235","endLine":1,"endColumn":26},{"ruleId":"253","severity":1,"message":"254","line":19,"column":70,"nodeType":"255","messageId":"256","endLine":19,"endColumn":71,"fix":"267"},{"ruleId":"232","severity":1,"message":"266","line":1,"column":17,"nodeType":"234","messageId":"235","endLine":1,"endColumn":26},{"ruleId":"232","severity":1,"message":"233","line":2,"column":8,"nodeType":"234","messageId":"235","endLine":2,"endColumn":13},{"ruleId":"253","severity":1,"message":"254","line":20,"column":56,"nodeType":"255","messageId":"256","endLine":20,"endColumn":57,"fix":"268"},"no-native-reassign",["269"],"no-negated-in-lhs",["270"],["269"],["270"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'URL' is assigned a value but never used.",["269"],["270"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'useHistory' is defined but never used.","'AdminLogin' is defined but never used.","'FresherRegister' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"271","text":"272"},{"range":"273","text":"272"},"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'id' is assigned a value but never used.","'l2' is defined but never used.","'l3' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Component' is defined but never used.",{"range":"274","text":"275"},{"range":"276","text":"275"},"no-global-assign","no-unsafe-negation",[674,681],"\r\n    .",[1506,1513],[519,530],"\r\n        .",[572,583]]